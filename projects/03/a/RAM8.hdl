// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(
        in=load, sel=address, 
        a=r0load, b=r1load, c=r2load, d=r3load,
        e=r4load, f=r5load, g=r6load, h=r7load
    );
    // define all registers
    Register(in=in, load=r0load, out=r0out);
    Register(in=in, load=r1load, out=r1out);
    Register(in=in, load=r2load, out=r2out);
    Register(in=in, load=r3load, out=r3out);
    Register(in=in, load=r4load, out=r4out);
    Register(in=in, load=r5load, out=r5out);
    Register(in=in, load=r6load, out=r6out);
    Register(in=in, load=r7load, out=r7out);
    Mux8Way16( 
        sel=address,
        a=r0out, b=r1out, c=r2out, d=r3out,
        e=r4out, f=r5out, g=r6out, h=r7out,
        out=out
    );
}
